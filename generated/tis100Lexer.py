# Generated from /Users/johan/PycharmProjects/pythonProject/ANTLR4/tis100.g4 by ANTLR 4.12.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,22,153,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,1,0,1,0,1,1,
        1,1,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,5,1,5,1,6,
        1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,10,
        1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,13,1,13,
        1,13,1,13,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,
        1,16,1,17,4,17,115,8,17,11,17,12,17,116,1,18,1,18,4,18,121,8,18,
        11,18,12,18,122,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,5,22,133,
        8,22,10,22,12,22,136,9,22,1,22,1,22,1,23,4,23,141,8,23,11,23,12,
        23,142,1,23,1,23,1,24,1,24,3,24,149,8,24,1,24,3,24,152,8,24,0,0,
        25,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,
        13,27,14,29,15,31,16,33,17,35,18,37,19,39,0,41,0,43,0,45,20,47,21,
        49,22,1,0,4,2,0,65,90,97,122,1,0,48,57,2,0,10,10,13,13,2,0,9,9,32,
        32,156,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,
        0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,
        0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,
        0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,45,1,0,0,
        0,0,47,1,0,0,0,0,49,1,0,0,0,1,51,1,0,0,0,3,53,1,0,0,0,5,55,1,0,0,
        0,7,59,1,0,0,0,9,63,1,0,0,0,11,67,1,0,0,0,13,69,1,0,0,0,15,73,1,
        0,0,0,17,77,1,0,0,0,19,81,1,0,0,0,21,85,1,0,0,0,23,89,1,0,0,0,25,
        93,1,0,0,0,27,97,1,0,0,0,29,101,1,0,0,0,31,104,1,0,0,0,33,109,1,
        0,0,0,35,114,1,0,0,0,37,120,1,0,0,0,39,124,1,0,0,0,41,126,1,0,0,
        0,43,128,1,0,0,0,45,130,1,0,0,0,47,140,1,0,0,0,49,151,1,0,0,0,51,
        52,5,33,0,0,52,2,1,0,0,0,53,54,5,58,0,0,54,4,1,0,0,0,55,56,5,65,
        0,0,56,57,5,68,0,0,57,58,5,68,0,0,58,6,1,0,0,0,59,60,5,83,0,0,60,
        61,5,85,0,0,61,62,5,66,0,0,62,8,1,0,0,0,63,64,5,77,0,0,64,65,5,79,
        0,0,65,66,5,86,0,0,66,10,1,0,0,0,67,68,5,44,0,0,68,12,1,0,0,0,69,
        70,5,74,0,0,70,71,5,69,0,0,71,72,5,90,0,0,72,14,1,0,0,0,73,74,5,
        74,0,0,74,75,5,71,0,0,75,76,5,90,0,0,76,16,1,0,0,0,77,78,5,74,0,
        0,78,79,5,76,0,0,79,80,5,90,0,0,80,18,1,0,0,0,81,82,5,74,0,0,82,
        83,5,77,0,0,83,84,5,80,0,0,84,20,1,0,0,0,85,86,5,83,0,0,86,87,5,
        65,0,0,87,88,5,86,0,0,88,22,1,0,0,0,89,90,5,83,0,0,90,91,5,87,0,
        0,91,92,5,80,0,0,92,24,1,0,0,0,93,94,5,78,0,0,94,95,5,79,0,0,95,
        96,5,80,0,0,96,26,1,0,0,0,97,98,5,65,0,0,98,99,5,67,0,0,99,100,5,
        67,0,0,100,28,1,0,0,0,101,102,5,85,0,0,102,103,5,80,0,0,103,30,1,
        0,0,0,104,105,5,68,0,0,105,106,5,79,0,0,106,107,5,87,0,0,107,108,
        5,78,0,0,108,32,1,0,0,0,109,110,5,68,0,0,110,111,5,65,0,0,111,112,
        5,84,0,0,112,34,1,0,0,0,113,115,3,43,21,0,114,113,1,0,0,0,115,116,
        1,0,0,0,116,114,1,0,0,0,116,117,1,0,0,0,117,36,1,0,0,0,118,121,3,
        39,19,0,119,121,3,43,21,0,120,118,1,0,0,0,120,119,1,0,0,0,121,122,
        1,0,0,0,122,120,1,0,0,0,122,123,1,0,0,0,123,38,1,0,0,0,124,125,3,
        41,20,0,125,40,1,0,0,0,126,127,7,0,0,0,127,42,1,0,0,0,128,129,7,
        1,0,0,129,44,1,0,0,0,130,134,5,35,0,0,131,133,8,2,0,0,132,131,1,
        0,0,0,133,136,1,0,0,0,134,132,1,0,0,0,134,135,1,0,0,0,135,137,1,
        0,0,0,136,134,1,0,0,0,137,138,6,22,0,0,138,46,1,0,0,0,139,141,7,
        3,0,0,140,139,1,0,0,0,141,142,1,0,0,0,142,140,1,0,0,0,142,143,1,
        0,0,0,143,144,1,0,0,0,144,145,6,23,0,0,145,48,1,0,0,0,146,148,5,
        13,0,0,147,149,5,10,0,0,148,147,1,0,0,0,148,149,1,0,0,0,149,152,
        1,0,0,0,150,152,5,10,0,0,151,146,1,0,0,0,151,150,1,0,0,0,152,50,
        1,0,0,0,8,0,116,120,122,134,142,148,151,1,6,0,0
    ]

class tis100Lexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    Constant = 18
    Identifier = 19
    Comment = 20
    Whitespace = 21
    Newline = 22

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'!'", "':'", "'ADD'", "'SUB'", "'MOV'", "','", "'JEZ'", "'JGZ'", 
            "'JLZ'", "'JMP'", "'SAV'", "'SWP'", "'NOP'", "'ACC'", "'UP'", 
            "'DOWN'", "'DAT'" ]

    symbolicNames = [ "<INVALID>",
            "Constant", "Identifier", "Comment", "Whitespace", "Newline" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "Constant", "Identifier", "IdentifierNondigit", 
                  "Nondigit", "Digit", "Comment", "Whitespace", "Newline" ]

    grammarFileName = "tis100.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.12.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


